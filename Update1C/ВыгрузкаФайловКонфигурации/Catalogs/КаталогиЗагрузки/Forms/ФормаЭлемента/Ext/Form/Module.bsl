
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.ТипКаталога = ПредопределенноеЗначение("Перечисление.ТипыКаталогов.Локальный");
		
	КонецЕсли;
	
	ОбновитьВидимостьЭлементов();
	
КонецПроцедуры

Процедура ОбновитьВидимостьЭлементов()
	
	Элементы.ТипКаталога.Доступность 		= Не Объект.Предопределенный;
	
	Элементы.Наименование.Доступность 		= Не Объект.Предопределенный;
	
	ЭтоЛокальныйКаталог 					= Объект.ТипКаталога = Перечисления.ТипыКаталогов.Локальный;
	
	Элементы.Адрес.КнопкаВыбора 			= ЭтоЛокальныйКаталог;
	
	Элементы.Порт.Видимость 				= Не ЭтоЛокальныйКаталог;
	Элементы.ИмяПользователя.Видимость 		= Не ЭтоЛокальныйКаталог;
	Элементы.Пароль.Видимость 				= Не ЭтоЛокальныйКаталог;
	
	Элементы.Группа_ВебХранилище.Видимость = Объект.ТипКаталога = Перечисления.ТипыКаталогов.ВебХранилище;
	
	Элементы.ПараметрыПодключенияНастроены.Видимость 	= Не ЭтоЛокальныйКаталог;
	Элементы.ПараметрыПодключенияНастроены.Доступность 	= ПараметрыПодключенияНастроены;
	
	Элементы.Адрес.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	 
	Если ЭтоЛокальныйКаталог Тогда
				
		Элементы.Адрес.Заголовок 			= "Путь";
		
		Элементы.Адрес.УстановитьДействие("НачалоВыбора", "КаталогНачалоВыбора");
		
		Элементы.Адрес.Подсказка 			= "Здесь нужно указать локальный каталог хранения файлов (Обязательно)";
		
		Элементы.Картинка.Картинка 				= БиблиотекаКартинок.Картинка_Локальный;
		
	Иначе
		
		Элементы.Адрес.Заголовок 			= "Адрес";
		
		Элементы.Адрес.УстановитьДействие("НачалоВыбора", "");
		
		Элементы.Адрес.Подсказка 			= "Здесь нужно указать родительский каталог в веб-хранище (необязательно)";
		
		ЗначениеВХранилище 					= Неопределено;
		
		Если ЗначениеЗаполнено(ПутьКХранилищу) Тогда
			ЗначениеВХранилище = ПолучитьИзВременногоХранилища(ПутьКХранилищу);
		КонецЕсли;
		
		ЭтоЯндекс 	= Объект.ИмяПредопределенныхДанных = "ЯндексДиск";
		ЭтоГугл 	= Объект.ИмяПредопределенныхДанных = "ГуглДиск";
		ЭтоДропБокс = Объект.ИмяПредопределенныхДанных = "ДропБокс";
		
		ПараметрыПодключенияНастроены 		= ЗначениеВХранилище <> Неопределено И ЗначениеВХранилище.Свойство("ПараметрыПодключения");
		
		Если ПараметрыПодключенияНастроены Тогда
			
			СрокДействия = ЗначениеВХранилище.ПараметрыПодключения.СрокДействия;
			
		КонецЕсли;
		
		Элементы.Адрес.Видимость 				= Истина;
		Элементы.Порт.Видимость 				= Ложь;
		Элементы.ИмяПользователя.Видимость 		= Ложь;
		Элементы.Пароль.Видимость 				= Ложь;	
		
		Если ЭтоЯндекс Тогда
			
			Элементы.Картинка.Картинка 				= БиблиотекаКартинок.Картинка_Яндекс;
			
		ИначеЕсли ЭтоГугл Тогда
			
			Элементы.Картинка.Картинка 				= БиблиотекаКартинок.Картинка_Гугл;
			
		ИначеЕсли ЭтоДропБокс Тогда
			
			Элементы.Картинка.Картинка 				= БиблиотекаКартинок.Картинка_ДропБокс;
			
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЭтоПомощник") Тогда
		
		ЭтоПомощник = Истина;
		
		Если Объект.ТипКаталога = Перечисления.ТипыКаталогов.Локальный Тогда
			
			ОМ_Сервер.СообщитьПользователю("Здесь необходимо выбрать локальный каталог. Сюда будут закачиваться обновления 1С.",,, "Объект.Адрес");
			
		ИначеЕсли Объект.ТипКаталога = Перечисления.ТипыКаталогов.ВебХранилище Тогда
			
			ОМ_Сервер.СообщитьПользователю("Здесь необходимо указать имя каталога в веб-хранилище. Сюда будут закачиваться обновления 1С.",,, "Объект.Адрес");
			
			ОМ_Сервер.СообщитьПользователю("С помощью кнопки " + """" + "Авторизовать" +  """" + " можно авторизоваться в веб-хранилище");
			
			ОМ_Сервер.СообщитьПользователю("С помощью кнопки " + """" + "Проверить" +  """" + " можно проверить подключение к веб-хранилищу");
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЭтаФорма.Доступность 						= Не Объект.НеРаботает;
	Элементы.ОтправитьТестовыйФайл.Доступность 	= Не Объект.НеРаботает;
	
	Если Объект.НеРаботает Тогда
		
		ОМ_Сервер.СообщитьПользователю("К сожалению, этот каталог временно не работает =(");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РежимДиалога 						= РежимДиалогаВыбораФайла.ВыборКаталога;
	
	ДиалогОткрытия 						= Новый ДиалогВыбораФайла(РежимДиалога); 
	
	ДиалогОткрытия.Каталог 				= "%USERPROFILE%\Desktop"; 
	ДиалогОткрытия.МножественныйВыбор 	= Ложь; 
	ДиалогОткрытия.Заголовок 			= "Выберите каталог для хранения конфигураций"; 
	ДиалогОткрытия.Фильтр 				= "";
	
	ДиалогОткрытия.Показать(Новый ОписаниеОповещения("КаталогХраненияЗавершение", ЭтотОбъект)); 	
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогХраненияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено 
		И Результат.Количество() > 0 Тогда
		
		Объект.Адрес = Результат[0];
		
		Модифицированность = Истина;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТипКаталогаПриИзменении(Элемент)
	
	ОбновитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_НастроитьПараметрыПодключенияНажатие(Элемент)
	
	СписокПараметров 	= Новый Структура;
	
	СписокПараметров.Вставить("ИмяПользователя", 		Объект.ИмяПользователя);
	СписокПараметров.Вставить("Пароль", 				Объект.Пароль);
	СписокПараметров.Вставить("Приложение", 			Объект.ИмяПредопределенныхДанных);
	
	Оповещение 			= Новый ОписаниеОповещения("ДействияПослеНастройкиПодключения", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ОбменСОблачнымХранилищем.Форма.ФормаАвторизация", СписокПараметров, ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияПослеНастройкиПодключения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ПутьКХранилищу 		= ПоместитьВоВременноеХранилище(Результат, ЭтаФорма.УникальныйИдентификатор);
		Модифицированность 	= Истина;
		
	КонецЕсли;
	
	ОбновитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Здесь помним, что это хранилище значений, нужно прочитать его содержимое
	ТекущиеПараметрыПодключения = ТекущийОбъект.ПараметрыПодключения.Получить();
	
	Если ТекущиеПараметрыПодключения <> Неопределено Тогда
		
		ПутьКХранилищу 				= ПоместитьВоВременноеХранилище(ТекущиеПараметрыПодключения, ЭтаФорма.УникальныйИдентификатор);
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ПутьКХранилищу) Тогда
		
		// Здесь помним, что это структура настроек подключения
		ТекущиеПараметрыПодключения = ПолучитьИзВременногоХранилища(ПутьКХранилищу);
		
		Хранилище = ОМ_Сервер.СложитьВХранилище(ТекущиеПараметрыПодключения);
		
		ТекущийОбъект.ПараметрыПодключения = Хранилище;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьВременныйФайлНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВременныйФайл = ОМ_Сервер.ПолучитьИмяВременногоФайла_("xml");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ВременныйФайл, "UTF8");
	
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("СистемнаяИнформация");
	
	СистемнаяИнформация = ОМ_Служебный.Получить_СистемнуюИнформацию(Истина);
	
	Для Каждого Стр Из СистемнаяИнформация Цикл
		
		ЗаписьXML.ЗаписатьНачалоЭлемента(Стр.Ключ);
		
		ЗаписьXML.ЗаписатьТекст(Строка(Стр.Значение));
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); // </СистемнаяИнформация>
	
	ЗаписьXML.Закрыть();
	
	Файл 						= Новый Файл(ВременныйФайл);
	
	АдресХранилища 				= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ВременныйФайл));
	
	Если ЗначениеЗаполнено(Объект.Адрес) Тогда
		
		ЕстьРазделитель 			= СтрНайти(Объект.Адрес, "/", НаправлениеПоиска.СКонца) > 0;
		
		Если Не ЕстьРазделитель Тогда
			Каталог_РПХ = Объект.Адрес + "/";
		Иначе
			Каталог_РПХ = Объект.Адрес;
		КонецЕсли;
		
		Результат_РПХ = ОМ_ОбменВеб.Создать_Папку(Объект.Ссылка, Каталог_РПХ);
		
		Если Не Результат_РПХ.Выполнено Тогда
			ВызватьИсключение("Не удалось создать каталог " + """" + Каталог_РПХ + """");
		КонецЕсли;
		
		ПутьКФайлуВХранилище 	= Каталог_РПХ + Файл.Имя;
		
	Иначе
		ПутьКФайлуВХранилище 	= Файл.Имя;
	КонецЕсли;
	
	// ВременныйТестовыйФайл
	Результат_ВТФ = ОМ_ОбменВеб.Выгрузить_Файл(Объект.Ссылка, ПутьКФайлуВХранилище, АдресХранилища, Результат_РПХ.ИД_Файла);
		
	Если Результат_ВТФ.Выполнено Тогда
		
		Если Объект.ИмяПредопределенныхДанных = "ЯндексДиск" Тогда
			ОМ_ОбменВеб.Удалить_Файл(Объект.Ссылка, ПутьКФайлуВХранилище);
		ИначеЕсли Объект.ИмяПредопределенныхДанных = "ГуглДиск" Тогда
			ОМ_ОбменВеб.Удалить_Файл(Объект.Ссылка, Результат_ВТФ.ИД_Файла);
		Иначе
			ВызватьИсключение("Метод пробного соединения " + """" + Объект.ИмяПредопределенныхДанных + """" + " не описан")
		КонецЕсли;
		
		ОМ_Сервер.СообщитьПользователю("Соединение работает",, , "ПараметрыПодключенияНастроены");
		
	Иначе
		
		ОМ_Сервер.СообщитьПользователю("Не удалось установить соединение",, , "ПараметрыПодключенияНастроены");
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьТестовыйФайл(Команда)
	
	ОчиститьСообщения();
	
	Если Модифицированность Тогда
		ОМ_Клиент.СообщитьПользователю("Сперва нужно записать изменения");	
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПутьКХранилищу) Тогда
				
		ОтправитьВременныйФайлНаСервере();
		
	Иначе
		
		ОМ_Клиент.СообщитьПользователю("Учетная запись не авторизована",, "ПараметрыПодключенияНастроены");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

