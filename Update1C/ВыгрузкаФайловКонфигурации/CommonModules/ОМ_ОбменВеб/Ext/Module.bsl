
#Область ОбщиеВспомогательныеМетоды

// Процедура - Проверяет, вышел ли срок действия Токена. 
// Если да - при возможности получит и запишет новый
//
// Параметры:
//  СсылкаНаКаталогЗагрузки	 - СправочникСсылка.КаталогиЗагрузки
//
Процедура ПроверитьАктуальностьПодключения(Знач СсылкаНаКаталогЗагрузки) Экспорт

	ОМ_ОбменВебСлужебный.ПроверитьАктуальностьПодключения(СсылкаНаКаталогЗагрузки);
	
КонецПроцедуры

// Функция - Возвращает веб-описание расширения
//
// Параметры:
//  Расширение	 - Строка (Пример: "xml" или ".xml")
// 
// Возвращаемое значение:
//   - Строка в формате веб-описания
//
Функция Получить_ТипВебФайла(Знач Расширение) Экспорт
	
	Результат = ОМ_ОбменВебСлужебный.Получить_ТипВебФайла(Расширение);
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Возврат Результат;
	Иначе
		
		ВызватьИсключение("Для расширения " + """" + Расширение + """" + " не найдено веб-описание");
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область МетодыОбменаСКаталогомЗагрузки

// Функция - Получить токен веб каталога
//
// Параметры:
//  КодАвторизации		 - Строка 
//  ПараметрыПриложения	 - Соответствие или Структура 
// 
// Возвращаемое значение:
//   Структура("Токен, СрокДействия", {"Токен_Рефреш", "Токен_ИД" [Если есть]}) 
//
Функция Получить_ТокенВебКаталога(КодАвторизации, Знач ПараметрыПриложения)
	        
	Если ТипЗнч(ПараметрыПриложения) = Тип("Структура") Тогда
		ПараметрыПриложения = ОМ_Служебный.Получить_ПараметрыПриложенияAPI(Истина).Получить(ПараметрыПриложения.Имя);	
	КонецЕсли;
	
	ИмяПриложения = ПараметрыПриложения.Получить("Имя");
	
	Если ИмяПриложения = "ЯндексДиск" Тогда
		
		Возврат ОМ_ОбменВебСлужебный.Получить_ТокенЯндекса(КодАвторизации, ПараметрыПриложения); 
		
	ИначеЕсли ИмяПриложения = "ГуглДиск" Тогда
		
		Возврат ОМ_ОбменВебСлужебный.Получить_ТокенГугла(КодАвторизации, ПараметрыПриложения);
		
	Иначе
		
		ВызватьИсключение("Для веб-каталога " + """" + ИмяПриложения + """" + " не описан порядок обработки получения токена");
		
	КонецЕсли;

КонецФункции

// Функция - Выгрузить файл
//
// Параметры:
//  СсылкаНаКаталогЗагрузки	 - СправочникСсылка.КаталогиЗагрузки 
//  ПутьКФайлу				 - Строка: Путь к файлу на веб-хранилище. Пример: "test.xml" или "Каталог/test.xml". 
//  АдресХранилища			 - Строка: Адрес во временном хранилище, где лежат двоичные данные. 
//  ИД_Владельца			 - Строка: Только для гугла. Это ИД вледельца каталога 
// 
// Возвращаемое значение:
//   - Структура("Выполнено" - Булево, "ИД_Файла" - Строка, "Есть_ИД" - Булево)   
//
Функция Выгрузить_Файл(СсылкаНаКаталогЗагрузки, ПутьКФайлу, АдресХранилища, ИД_Владельца = Неопределено) Экспорт
	
	СтруктураОтвета = Новый Структура;
	
	СтруктураОтвета.Вставить("Выполнено", 	Ложь);
	СтруктураОтвета.Вставить("ИД_Файла", 	"");
	
	Если СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных = "ЯндексДиск" Тогда
		
		СтруктураОтвета.Выполнено = ОМ_ОбменВебСлужебный.ВыгрузитьФайл_Яндекса(ПутьКФайлу, АдресХранилища, СсылкаНаКаталогЗагрузки);
		
	ИначеЕсли СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных = "ГуглДиск" Тогда
		
		ХешСтроки = ОМ_Сервер.Получить_MD5_ХешСтроки(ПутьКФайлу);
		
		СтруктураОтвета.Выполнено = ОМ_ОбменВебСлужебный.ВыгрузитьФайл_Гугла(ПутьКФайлу, АдресХранилища, СсылкаНаКаталогЗагрузки, СтруктураОтвета.ИД_Файла, ИД_Владельца, ХешСтроки);
		
	Иначе 
		ВызватьИсключение("Для веб-каталога " + """" + СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных + """" + " не описан порядок обработки выгрузки файла");
	КонецЕсли;
	
	СтруктураОтвета.Вставить("Есть_ИД", 	ЗначениеЗаполнено(СтруктураОтвета.ИД_Файла));
	
	Возврат СтруктураОтвета;
	
КонецФункции

// Функция - Создать папку
//
// Параметры:
//  СсылкаНаКаталогЗагрузки	 - СправочникСсылка.КаталогиЗагрузки 
//  ИмяКаталога				 - Строка: Имя создаваемого каталога в веб-хранилище. Пример: "Каталог". 
//  ИД_Владельца			 - Строка: Только для гугла. Это ИД вледельца нового каталога
// 
// Возвращаемое значение:
//   - Структура("Выполнено" - Булево, "ИД_Файла" - Строка, "Есть_ИД" - Булево)   
//
Функция Создать_Папку(СсылкаНаКаталогЗагрузки, ИмяКаталога, ИД_Владельца = Неопределено) Экспорт
	
	СтруктураОтвета = Новый Структура;
	
	СтруктураОтвета.Вставить("Выполнено", 	Ложь);
	СтруктураОтвета.Вставить("ИД_Файла", 	"");
	
	Если СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных = "ЯндексДиск" Тогда
		
		СтруктураОтвета.Выполнено = ОМ_ОбменВебСлужебный.СоздатьПапку_Яндекса(ИмяКаталога, СсылкаНаКаталогЗагрузки);
		
	ИначеЕсли СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных = "ГуглДиск" Тогда
		
		ХешСтроки 		= ОМ_Сервер.Получить_MD5_ХешСтроки(ИмяКаталога);
		
		СтруктураОтвета.Выполнено = ОМ_ОбменВебСлужебный.СоздатьПапку_Гугла(ИмяКаталога, СсылкаНаКаталогЗагрузки, СтруктураОтвета.ИД_Файла, ИД_Владельца, ХешСтроки);
		
	Иначе 
		ВызватьИсключение("Для веб-каталога " + """" + СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных + """" + " не описан порядок обработки создания папки");
	КонецЕсли;
	
	СтруктураОтвета.Вставить("Есть_ИД", 	ЗначениеЗаполнено(СтруктураОтвета.ИД_Файла));
	
	Возврат СтруктураОтвета;
	
КонецФункции

// Функция - Скачать файл
//
// Параметры:
//  СсылкаНаКаталогЗагрузки	 - СправочникСсылка.КаталогиЗагрузки 
//  ИД_Файла				 - Строка: Если Яндекс.Диск - Путь к файлу, если Google Диск - Идентификатор файла
// 
// Возвращаемое значение:
//   - Строка: Адрес во временном хранище, в котором лежат двоичные данные
//
Функция Скачать_Файл(СсылкаНаКаталогЗагрузки, ИД_Файла) Экспорт
	
	ВызватьИсключение("Метод " + """" + "ОМ_ОбменВеб.Скачать_Файл" + """" + " не описан.");
	
КонецФункции

// Функция - Удалить файл
//
// Параметры:
//  СсылкаНаКаталогЗагрузки	 - СправочникСсылка.КаталогиЗагрузки 
//  ИД_Файла				 - Строка: Если Яндекс.Диск - Путь к файлу, если Google Диск - Идентификатор файла
// 
// Возвращаемое значение:
//   - Булево: Удалось ли выполнить операцию
//
Функция Удалить_Файл(СсылкаНаКаталогЗагрузки, ИД_Файла) Экспорт
	
	Если СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных = "ЯндексДиск" Тогда
		
		Возврат ОМ_ОбменВебСлужебный.УдалитьФайл_Яндекса(ИД_Файла, СсылкаНаКаталогЗагрузки);
		
	ИначеЕсли СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных = "ГуглДиск" Тогда
		
		Возврат ОМ_ОбменВебСлужебный.УдалитьФайл_Гугла(ИД_Файла, СсылкаНаКаталогЗагрузки);
		
	Иначе 
		ВызватьИсключение("Для веб-каталога " + """" + СсылкаНаКаталогЗагрузки.ИмяПредопределенныхДанных + """" + " не описан порядок удаления файла");
	КонецЕсли;
		
КонецФункции

#КонецОбласти



