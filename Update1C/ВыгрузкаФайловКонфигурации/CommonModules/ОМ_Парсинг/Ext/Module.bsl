
Функция Получить_Узлы_DOM(Элемент, Имя) Экспорт
	
	Возврат Элемент.selectNodes(Имя);
	
КонецФункции

Функция Получить_ОтдельныйУзел_DOM(Элемент, Имя) Экспорт
	
	Возврат Элемент.selectSingleNode(Имя);
	
КонецФункции

Функция Новый_XMLДокумент_DOM() Экспорт
	
	//Попытка
	//	XML = Новый COMОбъект("Msxml2.DOMDocument.4.0");
	//Исключение
	Попытка
		XML = Новый COMОбъект("Msxml2.DOMDocument.3.0");
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	//КонецПопытки;
	
	Возврат XML;
	
КонецФункции

Функция Получить_Атрибут_DOM(Элемент, Имя) Экспорт
	
	Если Элемент <> Неопределено 
		И Элемент.attributes <> Неопределено Тогда
		Возврат Элемент.getAttribute(Имя);
	КонецЕсли;
	
КонецФункции

Функция Получить_ЭлементДокумента_DOM(Док, Имя, Индекс = 0) Экспорт
	
	Список = Док.getElementsByTagName(Имя);
	Возврат Список.item(Индекс);
	
КонецФункции


Функция ПолучитьПараметрыЧтенияXML() Экспорт
	
	Возврат Новый ПараметрыЧтенияXML(,,,,,,, Ложь);
	
КонецФункции

// 	КонтентСтраницы = ДокументHTML.НайтиПоФильтру(ОМ_Парсинг.НовыйФильтрПоКлассуТега("div", "downloadDist", Истина));
Функция НовыйФильтрПоКлассуТега(Тег, Класс, ТочноеСоответствие = Истина) Экспорт  
	
	ВидПоиска = ?(ТочноеСоответствие = Истина, "valueequals", "valuematchesregex");
	
	ИмяКласс = ?(ТочноеСоответствие = Истина, Класс, Класс+".+");
	
	
	ПараметрыПоиска = Новый Структура("type,value", "intersection", Новый Массив);
	
	ПараметрыПоиска.value.Добавить(Новый Структура("type,value", "elementname", Новый Структура("value,operation", Тег, "equals")));
	
	ПараметрыПоиска.value.Добавить(
	
	Новый Структура("type,value", "hasattribute",
	
	Новый Структура("value,operation", "class", "nameequals")));
	
	ПараметрыПоиска.value.Добавить(Новый Структура("type,value","hasattribute",
	
	Новый Структура("value,operation", ИмяКласс,ВидПоиска)));
	
	Запись = Новый ЗаписьJSON;
	
	Запись.УстановитьСтроку();
	
	ЗаписатьJSON(Запись, ПараметрыПоиска);
	
	Фильтр = Запись.Закрыть();
	
	Возврат Фильтр;
	
КонецФункции

Функция Получить_ДоступныеНастройки() Экспорт
	
	Массив = Новый Массив;
	
	Для Каждого Константа Из Метаданные.Константы Цикл
		                                                     
		Если Константа.Тип <> Новый ОписаниеТипов("ХранилищеЗначения") Тогда
			Массив.Добавить(Константа.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Массив;
		
КонецФункции

Процедура ДобавитьСтрочкуXMLВЗапись(ЗаписьXML, СтрокаТЧСтрокой, НоваяСтрока) Экспорт
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Line");
	
	Массив = СтрРазделить(СтрокаТЧСтрокой, ",", Ложь);
	
	Для Каждого Элемент Из Массив Цикл
		
		Если НоваяСтрока.Свойство(Элемент) Тогда
			
			ЗаписьXML.ЗаписатьНачалоЭлемента(Элемент);
			
			Значение = "";
			
			Если ЗначениеЗаполнено(НоваяСтрока[Элемент]) Тогда
				Значение = НоваяСтрока[Элемент];
			КонецЕсли;
			
			Если ТипЗнч(Значение) = Тип("Булево") Тогда
				Значение = Формат(Значение, "БЛ=0; БИ=1");	
			ИначеЕсли ТипЗнч(Значение) = Тип("Число") Тогда
				Значение = Формат(Значение, "ЧГ=0");
			КонецЕсли;
			
			ЗаписьXML.ЗаписатьТекст(Значение);
			
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
		КонецЕсли;
			
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Процедура ЗаписатьКоллекциюВXML(ПутьКФайлу, СтрокаТЧСтрокой, МассивСтруктур) Экспорт
	
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьФайл(ПутьКФайлу);
	
	Запись.ЗаписатьОбъявлениеXML();
	Запись.ЗаписатьНачалоЭлемента("Content");
	
	Для Каждого Элемент Из МассивСтруктур Цикл
		
		ДобавитьСтрочкуXMLВЗапись(Запись, СтрокаТЧСтрокой, Элемент);
		
	КонецЦикла;
	
	Запись.ЗаписатьКонецЭлемента();
	
	Запись.Закрыть()
	
КонецПроцедуры

Функция КаталогВременныхФайловПарсера() Экспорт
	
	Шаблон 				= "Не удалось создать каталог парсера на сервере";
	
	Каталог 			= КаталогВременныхФайлов();
	
	ИмяКаталогаПарсера 	= ИмяКаталогаПарсера();
	
	ОжидаемыйПуть		= Каталог + ИмяКаталогаПарсера;
	
	ПапкаПарсера 		= Новый Файл(ОжидаемыйПуть);
	
	Если Не ПапкаПарсера.Существует() Тогда
		
		Попытка
			
			СоздатьКаталог(ОжидаемыйПуть);
			
		Исключение
									
			ВызватьИсключение(Шаблон);
			
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ОжидаемыйПуть + "\";
	
КонецФункции

Функция ИмяКаталогаПарсера() Экспорт
	
	Результат = "Update1C";
	
	Возврат Результат;	
	
КонецФункции

Функция ПрефиксВременногоФайла() Экспорт
	Возврат ИмяКаталогаПарсера() + "_";	
КонецФункции

Функция ПрочитатьXMLВТаблицуЗначений(ПутьКФайлу, ОграничениеСтроки = 500) Экспорт
			
	ЧтениеXML = Новый ЧтениеXML;
	
	ЧтениеXML.ОткрытьФайл(ПутьКФайлу);
	
	СтрочкиФайлаXML = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	
	Если СтрочкиФайлаXML <> Неопределено 
		И СтрочкиФайлаXML.Свойства().Получить("Line") <> Неопределено Тогда
		
		КолонкиОпределены = Ложь;
		
		Для Каждого СтрокаТЧ Из СтрочкиФайлаXML.Line Цикл
			
			Если Не КолонкиОпределены Тогда
				
				ВсеКолонкиВСтроке = СтрокаТЧ.Свойства();
				
				Для Каждого Колонка Из ВсеКолонкиВСтроке Цикл
					
					Если ТаблицаЗначений.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
						
						ТаблицаЗначений.Колонки.Добавить(Колонка.Имя, ОМ_КлиентСервер.ОписаниеТипаСтрока(ОграничениеСтроки));
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Нстр = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(Нстр, СтрокаТЧ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТаблицаЗначений;
	
КонецФункции