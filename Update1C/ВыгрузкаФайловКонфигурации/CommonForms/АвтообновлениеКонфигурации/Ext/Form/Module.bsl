
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнформацияОПодключении 			= ОМ_Служебный.Получить_СтрокаСоединенияБазы();
	
	ИнформацияОбОбновлении 			= ОМ_Служебный.Получить_ОписаниеОбновлений();
	
	ТекущаяВерсия 					= ИнформацияОбОбновлении.ТекущаяВерсия;
	АктуальнаяВерсия 				= ИнформацияОбОбновлении.АктуальнаяВерсия;
	
	Элементы.КнОбновить.Доступность = ИнформацияОбОбновлении.НужноОбновить;
	
	Кнопка = Команды.Найти("КнОбновить");
	
	Если Элементы.КнОбновить.Доступность Тогда
		ТекстПодсказки = "Доступна новая версия. Нажмите, чтобы начать обновление.";
	Иначе
		ТекстПодсказки = "У вас установлена актуальная версия.";	
	КонецЕсли;
	
	Кнопка.Подсказка = ТекстПодсказки;
	
	ЭтоПринудительноеОбновление 	= Параметры.Свойство("ЭтоПринудительноеОбновление") И Параметры.ЭтоПринудительноеОбновление = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КнОбновить(Команда)
	
	ЭтаФорма.Доступность 			= Ложь;
	Элементы.КнОбновить.Доступность = Ложь;
	
	ПоказатьОповещениеПользователя("Запущено обновление конфигурации",,, БиблиотекаКартинок.ДлительнаяОперация48);
	
	ВременныйФайлОбновления = ОМ_Клиент.ПолучитьИмяВременногоФайла_("cf");
	ПредупредитьПользователяОНачале(ВременныйФайлОбновления);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредупредитьПользователяОНачале(СкопированныйФайл, ДополнительныеПараметры = Неопределено) Экспорт
		
	ПоказатьВопрос(Новый ОписаниеОповещения("ОтветПользователяПослеВопроса", ЭтотОбъект, Новый Структура("ВременныйФайлОбновления", СкопированныйФайл)), 
	"1. Убедитесь, что конфигуратор закрыт и в текущем сеансе все данные сохранены. 
	|2. Порядок обновления:
	|2.1 Загрузка внешнего файла '.cf'.
	|2.2 Обновление конфигурации.
	|2.3 Перезапуск 1С в течение 15 секунд.
	|3. Обновление выполняется в автоматическом режиме. Продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветПользователяПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		
		ПоказатьОповещениеПользователя("Обновление конфигурации отменено",,, БиблиотекаКартинок.Удалить);
		ЭтаФорма.Доступность 			= Истина;
		Элементы.КнОбновить.Доступность = Истина;
		Возврат;
		
	КонецЕсли;
	
	ВременныйФайлОбновления = ДополнительныеПараметры.ВременныйФайлОбновления;
	
	Адрес = ИнформацияОбОбновлении.СетевоеХранилище.Сервер + 
	ИнформацияОбОбновлении.СетевоеХранилище.АдресПроекта + 
	ИнформацияОбОбновлении.СетевоеХранилище.Конфигурация;
	
	НачатьКопированиеФайла(Новый ОписаниеОповещения("ОтветПользователяПослеВопросаЗавершение", ЭтотОбъект, Новый Структура("ВременныйФайлОбновления", ВременныйФайлОбновления)), Адрес, ВременныйФайлОбновления);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветПользователяПослеВопросаЗавершение(СкопированныйФайл, ДополнительныеПараметры) Экспорт
			
	ЗапуститьОбновлениеНаКлиенте(ДополнительныеПараметры.ВременныйФайлОбновления);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыЗапускаПриложения(РежимЗапускаПриложения = "CONFIG", АдминПрава = Истина, Задержка = "")
	
	Возврат ?(АдминПрава, ШаблонТекстаАдминПрав(), "") 
	+ ?(ЗначениеЗаполнено(Задержка), Задержка, "") + Ковычка() + КаталогПрограммы() + "1cv8.exe" + Ковычка() + " " + РежимЗапускаПриложения + " ";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыЗапускаБазы(ИнформацияОПодключении)
	
	Если ИнформацияОПодключении.Режим = "Серверный" Тогда
		
		ШаблонЗапускаБазы = "/S" + Ковычка() + ИнформацияОПодключении.Сервер + "\" + ИнформацияОПодключении.ПутьКБД + Ковычка()
		+ " /DisableStartupMessages";	
		
	Иначе
		
		ШаблонЗапускаБазы = "/F" + Ковычка() + ИнформацияОПодключении.ПутьКБД + Ковычка()
		+ " /DisableStartupMessages";	
		
	КонецЕсли;
	
	Возврат ШаблонЗапускаБазы;
	
КонецФункции

&НаКлиенте
Функция НовыйВременныйФайл(ИмяФ, РасширениеФ)
	
	ВР = ПолучитьИмяВременногоФайла("txt");
	Файл = Новый Файл(ВР);
		
	Результат = Файл.Путь + ИмяФ + "." + РасширениеФ;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗапуститьОбновлениеНаКлиенте(ВременныйФайлОбновления)
		
	ВременныйБатник_ЗагрузкаCF 	= ОМ_Клиент.ПолучитьИмяВременногоФайла_("bat");
	ВременныйБатник_Обновление 	= ОМ_Клиент.ПолучитьИмяВременногоФайла_("bat");
	ВременныйБатник_Запуск1С 	= ОМ_Клиент.ПолучитьИмяВременногоФайла_("bat");
	
	// +++++++++++++++++++++++++++++++++++ // ВременныйБатник_ЗагрузкаCF // +++++++++++++++++++++++++++++++++++ //
	
	Шаблон 						= ПараметрыЗапускаПриложения("CONFIG");
	Шаблон 						= Шаблон + ПараметрыЗапускаБазы(ИнформацияОПодключении);
	
	КомандаДляЗагрузкиCF 		= Шаблон + " /LoadCfg" + Ковычка() + ВременныйФайлОбновления + Ковычка();
	
	ЗаписьТекста 				= Новый ЗаписьТекста(ВременныйБатник_ЗагрузкаCF, "UTF8");
	ЗаписьТекста.Записать(КомандаДляЗагрузкиCF);
	ЗаписьТекста.Закрыть();
	
	// ----------------------------------- // ВременныйБатник_ЗагрузкаCF // ----------------------------------- //
	
	
	
	// +++++++++++++++++++++++++++++++++++ // ВременныйБатник_Обновление // +++++++++++++++++++++++++++++++++++ //
	
	КомандаДляОбновления 		= Шаблон + " /UpdateDBCfg";
	
	ЗаписьТекста 				= Новый ЗаписьТекста(ВременныйБатник_Обновление, "UTF8");
	ЗаписьТекста.Записать(КомандаДляОбновления);
	ЗаписьТекста.Закрыть();
	
	// ----------------------------------- // ВременныйБатник_Обновление // ----------------------------------- //
	
	// +++++++++++++++++++++++++++++++++++ // ВременныйБатник_Запуск1С /////////////////////////////
	
	КомандаДляПерезапуска1С 	= ПараметрыЗапускаПриложения("Enterprise",, "TIMEOUT /T 15 /NOBREAK &&") + ПараметрыЗапускаБазы(ИнформацияОПодключении);
	
	ЗаписьТекста 				= Новый ЗаписьТекста(ВременныйБатник_Запуск1С, "UTF8");
	ЗаписьТекста.Записать(КомандаДляПерезапуска1С);
	ЗаписьТекста.Закрыть();
	
	// ----------------------------------- // ВременныйБатник_Запуск1С // ----------------------------------- //
		
	ПараметрыОбработчика = Новый Структура;
		
	ПараметрыОбработчика.Вставить("ВременныйБатник_ЗагрузкаCF", 	ВременныйБатник_ЗагрузкаCF);
	ПараметрыОбработчика.Вставить("ВременныйБатник_Обновление", 	ВременныйБатник_Обновление);
	ПараметрыОбработчика.Вставить("ВременныйБатник_Запуск1С", 		ВременныйБатник_Запуск1С);
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ЗапускБатника_Ожидание", ЭтотОбъект, ПараметрыОбработчика), ВременныйБатник_ЗагрузкаCF,, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускБатника_Ожидание(КодВозврата, ПараметрыОбработчика) Экспорт
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ЗапускБатника_БезОжидания", ЭтотОбъект, ПараметрыОбработчика), ПараметрыОбработчика.ВременныйБатник_Обновление,, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускБатника_БезОжидания(КодВозврата, ПараметрыОбработчика) Экспорт
	
	ЗавершитьРаботуСистемы(Ложь, Ложь);
	
	Если ПараметрыОбработчика <> Неопределено Тогда
		НачатьЗапускПриложения(Новый ОписаниеОповещения("ЗапускБатника_БезОжидания", ЭтотОбъект, Неопределено), ПараметрыОбработчика.ВременныйБатник_Запуск1С,, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ШаблонТекстаАдминПрав()
	
	ТекстДляПривилигированногоРежима = " 
	|@echo off
	|
	|:: BatchGotAdmin
	|:-------------------------------------
	|REM  --> Check for permissions
	|>nul 2>&1 " + ОбернутьВКовычки("%SYSTEMROOT%\system32\cacls.exe") + " " + ОбернутьВКовычки("%SYSTEMROOT%\system32\config\system") + "
	|
	|REM --> If error flag set, we do not have admin.
	|if '%errorlevel%' NEQ '0' (
	|   echo Constructor: Request for administrator rights.. 
	|   goto UACPrompt
	|) else ( goto gotAdmin )
	|
	|:UACPrompt
	|   echo Set UAC = CreateObject^(" + ОбернутьВКовычки("Shell.Application") + "^) > " + ОбернутьВКовычки("%temp%\getadmin.vbs") + "
	|   set params = %*:" + ОбернутьВКовычки("=") + Ковычка() + "
	|   echo UAC.ShellExecute " + ОбернутьВКовычки("%~s0") + ", " + ОбернутьВКовычки("%params%") + ", " + ОбернутьВКовычки("") + ", " + ОбернутьВКовычки("runas") + ", 1 >> " + ОбернутьВКовычки("%temp%\getadmin.vbs") + "
	|
	|   " + ОбернутьВКовычки("%temp%\getadmin.vbs") + "
	|   exit /B
	|
	|:gotAdmin
	|   if exist " + ОбернутьВКовычки("%temp%\getadmin.vbs") + " ( del " + ОбернутьВКовычки("%temp%\getadmin.vbs") + " )
	|   pushd " + ОбернутьВКовычки("%CD%") + "
	|   CD /D " + ОбернутьВКовычки("%~dp0") + "
	|";	
	
	Возврат ТекстДляПривилигированногоРежима;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Ковычка()
	Возврат """";
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОбернутьВКовычки(Строчка)
	
	Возврат Ковычка() + Строчка + Ковычка();
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		
		Если ЭтоПринудительноеОбновление Тогда
			ЗавершитьРаботуСистемы(Ложь, Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
КонецПроцедуры




