
&НаКлиенте
Процедура КаталогХраненияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено 
		И Результат.Количество() > 0 Тогда
		
		КонстантыНабор.Обновления1С_КаталогХранения 	= Результат[0];
		
		Подключаемый_КонстантаПриИзмененииСервер();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКуки(Команда)
	
	ТекЭлемент = ЭтаФорма.ТекущийЭлемент.Имя;
	
	ОчиститьКукиНаСервере(ТекЭлемент);
	
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеНажатие(Элемент)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("ОткрытьРасписаниеЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеЗавершение(НовоеРасписание, Контекст) Экспорт

	Если НовоеРасписание <> Неопределено Тогда	
		Расписание = НовоеРасписание;
	Иначе
		Возврат;	
	КонецЕсли;
	
	Подключаемый_КонстантаПриИзмененииСервер("Расписание");
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

Процедура ОбновитьЭлементыФормы()
	
	Элементы.НаборКонстантАвтоЗагрузка.Доступность = КонстантыНабор.ФоновыеЗадания_РаботаНаСервере;
	
	Если Не КонстантыНабор.ФоновыеЗадания_РаботаНаСервере Тогда
		КонстантыНабор.Обновления1С_АвтоЗагрузка = Ложь;
	КонецЕсли;
	
	Элементы.Расписание.Доступность = КонстантыНабор.Обновления1С_АвтоЗагрузка;
		
	Если Расписание = Неопределено Тогда
		Расписание = Новый РасписаниеРегламентногоЗадания;	
	КонецЕсли;
	
	Если Расписание = Новый РасписаниеРегламентногоЗадания Тогда
		Элементы.Представление.Заголовок = "<Не установлено>";
	Иначе
		Элементы.Представление.Заголовок = Строка(Расписание);
	КонецЕсли;
	
	Элементы.НаборКонстантЗагружатьРелизыОт.Доступность = Не КонстантыНабор.Обновления1С_АвтоОтборДат;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьКукиНаСервере(ТекЭлемент)
	
	ЭтоИзменениеКукиФайлов = СтрНайти(ТекЭлемент, "Файлов") > 0;
	
	ОМ_Сервер.ОбновитьКуки("", ЭтоИзменениеКукиФайлов);
	
	Если ЭтоИзменениеКукиФайлов Тогда
		КонстантыНабор.Обновления1С_КукиФайлов = ОМ_Сервер.ПолучитьКуки(Истина);
	Иначе
		КонстантыНабор.Обновления1С_Куки = ОМ_Сервер.ПолучитьКуки(); 	
	КонецЕсли;
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

Процедура УстановитьМетод_ЗагрузкаГрупп()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаОбновитьДеревоРазделов();
	
КонецПроцедуры

Процедура УстановитьМетод_ЗагрузкаКонфигураций()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаЗагрузкаКонфигураций();
	
КонецПроцедуры

Процедура УстановитьМетод_ЗагрузкаРелизов()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаЗагрузкаРелизов();
	
КонецПроцедуры

Процедура УстановитьМетод_ЗагрузкаСсылок()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаЗагрузкаСсылок();
	
КонецПроцедуры

Процедура УстановитьМетод_ЗагрузкаФайлов()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаЗагрузкаФайлов1С();
	
КонецПроцедуры

Процедура УстановитьМетод_ОчиститьГруппы()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаОчисткиГрупп();
	
КонецПроцедуры

Процедура УстановитьМетод_ОчиститьКонфигурации()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаОчисткиКонфигураций();
	
КонецПроцедуры

Процедура УстановитьМетод_ОчиститьРелизы()
	
	ТекущийМетодФоновойОперации = ОМ_РегламентныеОперации.Получить_ИмяМетодаОчисткиРелизов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьЗагрузку(Команда)
	
	ДатаЗапуска = ТекущаяДата();
	//Журнал.Параметры.УстановитьЗначениеПараметра("ДатаЗапуска", ДатаЗапуска);
	
	ЭтаФорма.Доступность 					= Ложь;
	Элементы.КнопкиЗапускаФЗ.Доступность 	= Ложь;
	
	УстановитьМетод_ЗагрузкаКонфигураций();	
	ЗапускФоновогоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеФЗ() Экспорт
	
	ЭтаФорма.Доступность = Ложь;

	СтруктураОтвета = ОМ_Клиент.ФоновоеЗаданиеЗавершено(ТекущийМетодФоновойОперации, ЭтаФорма.УникальныйИдентификатор);
	
	Если СтруктураОтвета.Завершено Тогда
		
		ЭтаФорма.Доступность = Истина;
		
		ОтключитьОбработчикОжидания("СостояниеФЗ");
		
		ПоказатьОповещениеПользователя("Завершено",, "Загрузка завершена.", СтруктураОтвета.Картинка);
		
		ОбновитьКонстанты();
				
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбновитьКонстанты()
	
	ОМ_КлиентСервер.ДействиеСНаборомКонстант(ЭтаФорма, "Загрузить");
	
	Если Не ЗначениеЗаполнено(КонстантыНабор.Обновления1С_СерверИТС) Тогда
		КонстантыНабор.Обновления1С_СерверИТС 			= "releases.1c.ru";
		Константы.Обновления1С_СерверИТС.Установить(КонстантыНабор.Обновления1С_СерверИТС);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КонстантыНабор.Обновления1С_СерверАвторизацииИТС) Тогда
		КонстантыНабор.Обновления1С_СерверАвторизацииИТС = "login.1c.ru";
		Константы.Обновления1С_СерверАвторизацииИТС.Установить(КонстантыНабор.Обновления1С_СерверАвторизацииИТС);
	КонецЕсли;

	ВесьНабор 				= ОМ_Обновления1С.ОбъектыДляЗагрузкиПоУмолчанию();
	
	ЗначениеКонстанты 		= ОМ_Сервер.ПрочитатьХранилище("Обновления1С_ОбъектыДляЗагрузки");
		
	Если ЗначениеКонстанты = Неопределено
		Или ЗначениеКонстанты.Количество() = 0 Тогда
		
		ОбъектыДляЗагрузки = ВесьНабор;
		
		Константы.Обновления1С_ОбъектыДляЗагрузки.Установить(ОМ_Сервер.СложитьВХранилище(ОбъектыДляЗагрузки));
		
	Иначе
		ОбъектыДляЗагрузки = ЗначениеКонстанты;
	КонецЕсли;
	
	Если ОбъектыДляЗагрузки.Количество() <> ВесьНабор.Количество() Тогда
		
		НовыйНабор  = ВесьНабор;
		
		Нужное 		= ОМ_Обновления1С.ОбъектыДляЗагрузкиПоУмолчанию(Истина);
		
		Для Каждого Стр Из Нужное Цикл
			
			Попытка
				Элемент = НовыйНабор.НайтиПоЗначению(Стр.Значение);
			Исключение
				Элемент = Неопределено;
			КонецПопытки;
			
			Если Элемент <> Неопределено Тогда
				
				Элемент.Пометка = Стр.Пометка;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбъектыДляЗагрузки = НовыйНабор;
		
		Константы.Обновления1С_ОбъектыДляЗагрузки.Установить(ОМ_Сервер.СложитьВХранилище(ОбъектыДляЗагрузки));
		
	КонецЕсли;
	                                              
	Расписание = ОМ_Сервер.ПрочитатьХранилище("Обновления1С_Расписание");
	
	ОбъектыДляЗагрузки.СортироватьПоПредставлению();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПервоначальнаяНастройкаОткрывалась = ОМ_Служебный.ПервоначальнаяНастройкаОткрывалась();
	
	Если Не ПервоначальнаяНастройкаОткрывалась Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ОбновитьКонстанты();
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонстантаПриИзменении(Элемент)
	
	Подключаемый_КонстантаПриИзмененииСервер(Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_КонстантаПриИзмененииСервер(ИмяЭлемента = "") Экспорт
	
	ОбновитьЭлементыФормы();
	
	Если ИмяЭлемента = "ОбъектыДляЗагрузки" Тогда
		
		ЗначениеКонстанты = ЭтаФорма[ИмяЭлемента];
		Константы.Обновления1С_ОбъектыДляЗагрузки.Установить(ОМ_Сервер.СложитьВХранилище(ЗначениеКонстанты));
		
	ИначеЕсли ИмяЭлемента = "КонстантыНаборФоновыеЗадания_КоличествоПотоков" Тогда
		
		Если КонстантыНабор.ФоновыеЗадания_КоличествоПотоков = 0 Тогда
			
			КонстантыНабор.ФоновыеЗадания_КоличествоПотоков = ОМ_РегламентныеОперации.МаксЧислоПотоковПоУмолчанию();
			ОМ_Сервер.СообщитьПользователю("Нельзя установить 0 - по умолчанию изменено на " + """" + Строка(ОМ_РегламентныеОперации.МаксЧислоПотоковПоУмолчанию()) + """",,, "КонстантыНабор.ФоновыеЗадания_КоличествоПотоков");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Константы.Обновления1С_Расписание.Установить(ОМ_Сервер.СложитьВХранилище(Расписание));
	
	ОМ_КлиентСервер.ДействиеСНаборомКонстант(ЭтаФорма, "Записать");
	ОбновитьКонстанты();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРазделы(Команда)
	
	УстановитьМетод_ЗагрузкаГрупп();
	ЗапускФоновогоЗадания();

КонецПроцедуры

Функция ПроверитьЗаполнениеПолей()
	
	МассивОшибок = Новый Массив;
	
	Если Не ЗначениеЗаполнено(КонстантыНабор.Обновления1С_Логин) Тогда
		МассивОшибок.Добавить(ОМ_КлиентСервер.СформироватьСообщениеПользователю("Логин не указан", , , "КонстантыНабор.Обновления1С_Логин"));	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(КонстантыНабор.Обновления1С_Пароль) Тогда
		МассивОшибок.Добавить(ОМ_КлиентСервер.СформироватьСообщениеПользователю("Пароль не указан", , , "КонстантыНабор.Обновления1С_Пароль"));	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КонстантыНабор.Обновления1С_СерверИТС) Тогда
		МассивОшибок.Добавить(ОМ_КлиентСервер.СформироватьСообщениеПользователю("СерверИТС не указан", , , "КонстантыНабор.Обновления1С_СерверИТС"));	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(КонстантыНабор.Обновления1С_СерверАвторизацииИТС) Тогда
		МассивОшибок.Добавить(ОМ_КлиентСервер.СформироватьСообщениеПользователю("СерверАвторизацииИТС не указан", , , "КонстантыНабор.Обновления1С_СерверАвторизацииИТС"));	
	КонецЕсли;
	
	Если МассивОшибок.Количество() > 0 Тогда
		
		Для Каждого Сообщение Из МассивОшибок Цикл
			Сообщение.Сообщить();	
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивОшибок.Количество() = 0;
	
КонецФункции

&НаКлиенте
Процедура ЗапускФоновогоЗадания()
	
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнениеПолей() = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Доступность = Ложь;
	
	ПоказатьОповещениеПользователя("Задание запущено", , "Загрузка может выполняться длительное время.");
	
	ОМ_Клиент.ЗапуститьВФоне(ТекущийМетодФоновойОперации, ТекущиеПараметрыФЗ, Строка(ЭтаФорма.УникальныйИдентификатор), "Фоновое задание - " + ТекущийМетодФоновойОперации); 
	
	ПодключитьОбработчикОжидания("СостояниеФЗ", 3, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКонфигурации(Команда)
	
	УстановитьМетод_ЗагрузкаКонфигураций();
	ЗапускФоновогоЗадания();

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРелизы(Команда)
	
	УстановитьМетод_ЗагрузкаРелизов();
	ЗапускФоновогоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГиперрсылки(Команда)
	
	УстановитьМетод_ЗагрузкаСсылок();
	ЗапускФоновогоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура СкачатьФайлы1С(Команда)
	
	УстановитьМетод_ЗагрузкаФайлов();
	ЗапускФоновогоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьГруппы(Команда)
	
	УстановитьМетод_ОчиститьГруппы();
	ЗапускФоновогоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКонфигурации(Команда)
	
	УстановитьМетод_ОчиститьКонфигурации();
	ЗапускФоновогоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьРелизы(Команда)
	
	УстановитьМетод_ОчиститьРелизы();
	ЗапускФоновогоЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПеречитатьКонстанты" Тогда
		
		ОбновитьКонстанты();
		ОбновитьЭлементыФормы();
		
	КонецЕсли;
	
КонецПроцедуры

